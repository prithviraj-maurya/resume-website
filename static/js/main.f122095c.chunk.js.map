{"version":3,"sources":["static/Profile.jpg","static/profile-pic.jpeg","AboutMe.tsx","components/Cards.tsx","models/model.ts","Portfolios.tsx","Resume.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AboutMe","className","src","profilePic","alt","style","textAlign","type","href","process","color","textDecoration","React","Component","Cards","e","preventDefault","window","open","this","props","url","onClick","redirect","bind","maxHeight","maxWidth","image","name","projects","description","Portfolios","map","project","key","Resume","id","position","width","height","profile","redirectLinkedIn","aria-hidden","redirectGithub","redirectKaggle","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f122095c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.c254cf61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-pic.d55b31ed.jpeg\";","import React from 'react';\nimport profilePic from './static/profile-pic.jpeg';\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <div className=\"container about\">\n                <h1 className=\"title\"><b>ABOUT ME</b></h1>\n                <hr className=\"hr-dark\"/><hr className=\"hr-light\"/><br />\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <img className=\"profile-image\" src={profilePic} alt=\"profile\"/>\n                        </div>\n                        <div className=\"col-9\" style={{textAlign: 'left'}}>\n                            <h1>I am <span className=\"name\">Prithviraj Maurya</span></h1>\n                            <p className=\"desc\">I am a Full Stack Developer at Wissen Technology,\n                            I also work on AI and ML projects<br/> and I am an active Kaggler.\n                            </p>\n                            <p><b>Full Name</b>: Prithviraj Anil Maurya</p>\n                            <p><b>Age</b>: 24</p>\n                            <p><b>Nationality</b>: Indian</p>\n                            <p><b>Languages</b>: English & Hindi</p>\n                            <p><b>Address</b>: Bengaluru, Karnataka - 560035</p>\n                            <button type=\"button\" className=\"btn btn-primary\">\n                                <a href={ process.env.PUBLIC_URL + '/resume.pdf'} \n                                style={{color: 'white', textDecoration : 'none'}}>View Resume</a>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AboutMe;","import React from 'react';\nimport { project } from '../models/model';\n\nclass Cards extends React.Component<project> {\n\n    redirect(e) {\n        e.preventDefault();\n        window.open(this.props.url);\n    }\n\n    render() {\n        return (\n            <div>\n                <a href=\"/#\" onClick={this.redirect.bind(this)} style={{textDecoration: 'none'}}>\n                    <img style={{maxHeight: '100%', maxWidth: '100%'}}\n                    src={process.env.PUBLIC_URL + this.props.image} alt={this.props.name} />\n                    <p>{this.props.name}</p>\n                </a> \n            </div>\n        );\n    }\n}\n\nexport default Cards;","export interface project {\n    name: string;\n    description: string;\n    url: string;\n    image: string;\n}\n\nexport const projects: project[] = [\n    {\n        name: 'Age Group CLassification using Images',\n        description: `An Age Group Classifier trained on custom images of 3 classes groups \n        Adults, Teenagers and Toddlers. Trained a custom Resnet9 model as well as a pretrained model\n        for comparing results. Given an input image model can classify the age group pf people in the images\n        with 78% accuracy`,\n        url: 'https://console.paperspace.com/te7qp7xse/notebook/pr5gy5h8s',\n        image: '/images/age-group-clf.jpg'\n    },\n    {\n        name: 'Expenses App',\n        description: `A React-D3 based webapp for data visualization of all expenses\n        for the year and categroize the expenses into various categories like groceries etc. \n        A visualization tool to know what one spends on which category. Drag the expense bubble into \n        the catgeory and it gets linked to it. Color of the category grows darker as the expenses rise.\n        Can add new categories and remove existing ones.`,\n        url :'https://prithviraj-maurya.github.io/expenses-d3-react/',\n        image: '/images/expenses.png'\n    }\n];","import React from 'react';\nimport Cards from './components/Cards';\nimport { projects } from './models/model';\n\nclass Portfolios extends React.Component {\n\n    render() {\n        return (\n            <div className=\"container portfolio\">\n                <h1 className=\"title\"><b>PROJECTS</b></h1>\n                <hr className=\"hr-dark\"/><hr className=\"hr-light\"/><br/>\n                <div className=\"row\">\n                    { projects.map(project => {\n                        return <div className=\"col-3\">\n                                    <Cards name={project.name} description={project.description} \n                                        url={project.url} image={project.image} key={project.name}/>\n                                </div>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Portfolios;","import React from 'react';\nimport './Style.css';\nimport profile from './static/Profile.jpg';\nimport StarfieldAnimation from 'react-starfield-animation';\n\nimport AboutMe from './AboutMe';\nimport Portfolios from './Portfolios';\n\nclass Resume extends React.Component {\n\n  redirectLinkedIn(e) {\n    e.preventDefault();\n    window.open(\"http://www.linkedin.com/in/prithviraj-maurya-02aa40116\");\n  }\n\n  redirectGithub(e) {\n    e.preventDefault();\n    window.open(\"http://github.com/prithviraj-maurya\");\n  }\n\n  redirectKaggle(e) {\n    e.preventDefault();\n    window.open(\"http://www.kaggle.com/prithviraj7387\");\n  }\n\n  render() {\n    return (\n      <div>\n    <div className=\"ct\" id=\"home\">\n        <div className=\"ct\" id=\"about\">\n            <div className=\"ct\" id=\"portfolio\">\n                <div className=\"ct\" id=\"t4\">\n                    <section>\n                        <ul>\n                            <a href=\"#home\">\n                                <li className=\"icon fa fa-home\" id=\"uno\"></li>\n                            </a>\n                            <a href=\"#about\">\n                                <li className=\"icon fa fa-user\" id=\"dos\"></li>\n                            </a>\n                            <a href=\"#portfolio\">\n                              <li className=\"icon fa fa-briefcase\" id=\"tres\"></li>\n                            </a>\n                            <a href=\"#t4\">\n                                <li className=\"icon fa fa-dribbble\" id=\"cuatro\"></li>\n                            </a>\n                        </ul>\n                        <div className=\"page\" id=\"p1\">\n                            <StarfieldAnimation\n                              style={{\n                                position: 'absolute',\n                                width: '100%',\n                                height: '100%'\n                              }}\n                            />\n                            <div className=\"home\">\n                              <div className=\"profile-pic\">\n                                <img className=\"profile-img\" src={profile} alt=\"Profile\"/>\n                              </div>\n                              <div className=\"title\">Hi, I am <span className=\"name\">Prithviraj Maurya</span></div>\n                              <span className=\"hint\">Full Stack Developer, Active Kaggler, AI ML Enthusiast</span>\n                              <div className=\"social\">\n                                <a href=\"/#\" onClick={this.redirectLinkedIn}>\n                                  <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\n                                </a>\n                                <a href=\"/#\" onClick={this.redirectGithub}>\n                                  <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                                </a>\n                                <a href=\"/#\" onClick={this.redirectKaggle}>\n                                  <span style={{color: 'white'}}>k</span>\n                                </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"page\" id=\"p2\">\n                            <AboutMe></AboutMe>\n                        </div>\n                        <div className=\"page\" id=\"p3\">\n                            <Portfolios></Portfolios>\n                        </div>\n                        <div className=\"page\" id=\"p4\">\n                            <li className=\"icon fa fa-dribbble\"><span className=\"title\">Dribbble</span></li>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    );\n  }\n}\n\nexport default Resume;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport Resume from './Resume';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Resume />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}