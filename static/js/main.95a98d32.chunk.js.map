{"version":3,"sources":["AboutMe.tsx","Resume.tsx","App.tsx","serviceWorker.ts","index.tsx","static/Profile.jpg"],"names":["AboutMe","className","React","Component","Resume","e","preventDefault","window","open","id","href","style","position","width","height","src","profile","alt","onClick","this","redirectLinkedIn","aria-hidden","redirectGithub","redirectKaggle","color","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"0VAaeA,E,uKATP,OACI,yBAAKC,UAAU,mBACX,wBAAIA,UAAU,SAAQ,wCACtB,wBAAIA,UAAU,YAAW,wBAAIA,UAAU,kB,GALjCC,IAAMC,WC0FbC,E,+KAnFIC,GACfA,EAAEC,iBACFC,OAAOC,KAAK,4D,qCAGCH,GACbA,EAAEC,iBACFC,OAAOC,KAAK,yC,qCAGCH,GACbA,EAAEC,iBACFC,OAAOC,KAAK,0C,+BAIZ,OACE,6BACF,yBAAKP,UAAU,KAAKQ,GAAG,QACnB,yBAAKR,UAAU,KAAKQ,GAAG,SACnB,yBAAKR,UAAU,KAAKQ,GAAG,MACnB,yBAAKR,UAAU,KAAKQ,GAAG,MACnB,iCACI,4BACI,uBAAGC,KAAK,SACJ,wBAAIT,UAAU,kBAAkBQ,GAAG,SAEvC,uBAAGC,KAAK,UACJ,uBAAGT,UAAU,kBAAkBQ,GAAG,SAEtC,uBAAGC,KAAK,OACJ,wBAAIT,UAAU,oBAAoBQ,GAAG,UAEzC,uBAAGC,KAAK,OACJ,wBAAIT,UAAU,sBAAsBQ,GAAG,aAG/C,yBAAKR,UAAU,OAAOQ,GAAG,MACrB,kBAAC,IAAD,CACEE,MAAO,CACLC,SAAU,WACVC,MAAO,OACPC,OAAQ,UAGZ,yBAAKb,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cAAcc,IAAKC,IAASC,IAAI,aAEjD,yBAAKhB,UAAU,SAAf,YAAgC,0BAAMA,UAAU,QAAhB,sBAChC,0BAAMA,UAAU,QAAhB,0DACA,yBAAKA,UAAU,UACb,uBAAGS,KAAK,KAAKQ,QAASC,KAAKC,kBACzB,uBAAGnB,UAAU,iBAAiBoB,cAAY,UAE5C,uBAAGX,KAAK,KAAKQ,QAASC,KAAKG,gBACzB,uBAAGrB,UAAU,eAAeoB,cAAY,UAE1C,uBAAGX,KAAK,KAAKQ,QAASC,KAAKI,gBACzB,0BAAMZ,MAAO,CAACa,MAAO,UAArB,SAKV,yBAAKvB,UAAU,OAAOQ,GAAG,MACrB,kBAAC,EAAD,OAEJ,yBAAKR,UAAU,OAAOQ,GAAG,MACrB,wBAAIR,UAAU,qBAAoB,0BAAMA,UAAU,SAAhB,YAEtC,yBAAKA,UAAU,OAAOQ,GAAG,MACrB,wBAAIR,UAAU,uBAAsB,0BAAMA,UAAU,SAAhB,wB,GAzE3CC,IAAMC,WCOZsB,MARf,WACE,OACE,yBAAKxB,UAAU,OACb,kBAAC,EAAD,QCGcyB,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEjJ5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.95a98d32.chunk.js","sourcesContent":["import React from 'react';\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <div className=\"container about\">\n                <h1 className=\"title\"><b>ABOUT ME</b></h1>\n                <hr className=\"hr-dark\"/><hr className=\"hr-light\"/>\n            </div>\n        );\n    }\n}\n\nexport default AboutMe;","import React from 'react';\nimport './Style.css';\nimport profile from './static/Profile.jpg';\nimport StarfieldAnimation from 'react-starfield-animation';\n\nimport AboutMe from './AboutMe';\n\nclass Resume extends React.Component {\n\n  redirectLinkedIn(e) {\n    e.preventDefault();\n    window.open(\"http://www.linkedin.com/in/prithviraj-maurya-02aa40116\");\n  }\n\n  redirectGithub(e) {\n    e.preventDefault();\n    window.open(\"http://github.com/prithviraj-maurya\");\n  }\n\n  redirectKaggle(e) {\n    e.preventDefault();\n    window.open(\"http://www.kaggle.com/prithviraj7387\");\n  }\n\n  render() {\n    return (\n      <div>\n    <div className=\"ct\" id=\"home\">\n        <div className=\"ct\" id=\"about\">\n            <div className=\"ct\" id=\"t3\">\n                <div className=\"ct\" id=\"t4\">\n                    <section>\n                        <ul>\n                            <a href=\"#home\">\n                                <li className=\"icon fa fa-home\" id=\"uno\"></li>\n                            </a>\n                            <a href=\"#about\">\n                                <i className=\"icon fa fa-user\" id=\"dos\"></i>\n                            </a>\n                            <a href=\"#t3\">\n                                <li className=\"icon fa fa-coffee\" id=\"tres\"></li>\n                            </a>\n                            <a href=\"#t4\">\n                                <li className=\"icon fa fa-dribbble\" id=\"cuatro\"></li>\n                            </a>\n                        </ul>\n                        <div className=\"page\" id=\"p1\">\n                            <StarfieldAnimation\n                              style={{\n                                position: 'absolute',\n                                width: '100%',\n                                height: '100%'\n                              }}\n                            />\n                            <div className=\"home\">\n                              <div className=\"profile-pic\">\n                                <img className=\"profile-img\" src={profile} alt=\"Profile\"/>\n                              </div>\n                              <div className=\"title\">Hi, I am <span className=\"name\">Prithviraj Maurya</span></div>\n                              <span className=\"hint\">Full Stack Developer, Active Kaggler, AI ML Enthusiast</span>\n                              <div className=\"social\">\n                                <a href=\"/#\" onClick={this.redirectLinkedIn}>\n                                  <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\n                                </a>\n                                <a href=\"/#\" onClick={this.redirectGithub}>\n                                  <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                                </a>\n                                <a href=\"/#\" onClick={this.redirectKaggle}>\n                                  <span style={{color: 'white'}}>k</span>\n                                </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"page\" id=\"p2\">\n                            <AboutMe></AboutMe>\n                        </div>\n                        <div className=\"page\" id=\"p3\">\n                            <li className=\"icon fa fa-coffee\"><span className=\"title\">Coffee</span></li>\n                        </div>\n                        <div className=\"page\" id=\"p4\">\n                            <li className=\"icon fa fa-dribbble\"><span className=\"title\">Dribbble</span></li>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    );\n  }\n}\n\nexport default Resume;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport Resume from './Resume';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Resume />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Profile.c254cf61.jpg\";"],"sourceRoot":""}